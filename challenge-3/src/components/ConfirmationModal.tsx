import {
  Modal,
  Button,
  ModalOverlay,
  ModalHeader,
  ModalCloseButton,
  ModalBody,
  ModalFooter,
  ModalContent,
  AlertDialog,
  AlertDialogBody,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogContent,
  AlertDialogOverlay,
} from "@chakra-ui/react";
import { useRef, useState } from "react";

const ConfirmationModal = ({
  isOpen,
  onClose,
  onConfirm,
  title = "Confirmation",
  message = "Are you sure?",
  confirmText = "Confirm",
  cancelText = "Cancel",
}: {
  isOpen: boolean;
  onClose: () => void;
  onConfirm: () => void;
  title?: string;
  message?: string;
  confirmText?: string;
  cancelText?: string;
}) => {
  const [isRemoveOpen, setIsRemoveOpen] = useState(false);
  const leastDestructiveRef = useRef(null);

  const onRemoveOpen = () => setIsRemoveOpen(true);
  const onRemoveClose = () => setIsRemoveOpen(false);

  const handleConfirm = () => {
    onConfirm();
    onRemoveClose();
  };

  // Modal Layout Generated by ChatGPT
  return (
    <Modal isOpen={isOpen} onClose={onClose}>
      <ModalOverlay />
      <ModalContent>
        <ModalHeader>{title}</ModalHeader>
        <ModalCloseButton />
        <ModalBody>
          <p>{message}</p>
        </ModalBody>

        <ModalFooter>
          <Button colorScheme='blue' mr={3} onClick={onClose}>
            {cancelText}
          </Button>
          <Button variant='outline' onClick={onRemoveOpen}>
            {confirmText}
          </Button>
        </ModalFooter>

        {/* Remove Confirmation Modal */}
        <AlertDialog
          isOpen={isRemoveOpen}
          leastDestructiveRef={leastDestructiveRef}
          onClose={onRemoveClose}
        >
          <AlertDialogOverlay>
            <AlertDialogContent>
              <AlertDialogHeader fontSize='lg' fontWeight='bold'>
                {title}
              </AlertDialogHeader>

              <AlertDialogBody>{message}</AlertDialogBody>

              <AlertDialogFooter>
                <Button onClick={onRemoveClose}>{cancelText}</Button>
                <Button colorScheme='red' onClick={handleConfirm} ml={3}>
                  {confirmText}
                </Button>
              </AlertDialogFooter>
            </AlertDialogContent>
          </AlertDialogOverlay>
        </AlertDialog>
      </ModalContent>
    </Modal>
  );
};

export default ConfirmationModal;
